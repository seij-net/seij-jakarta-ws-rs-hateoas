<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>net.seij.jakarta-ws-rs-hateoas</groupId>
    <artifactId>sample-store-commons</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <description>Sample Store APIs, common core to share between various implementations, technology container agnotic</description>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <kotlin.version>1.3.61</kotlin.version>
        <jakartaee.version>8.0.0</jakartaee.version>
        <build-helper-maven-plugin.version>1.8</build-helper-maven-plugin.version>
        <version.maven-compiler-plugin>3.7.0</version.maven-compiler-plugin>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- https://mvnrepository.com/artifact/jakarta.platform/jakarta.jakartaee-bom -->
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-bom</artifactId>
                <version>${jakartaee.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.seij.jakarta-ws-rs-hateoas</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

   <build>
       <plugins>
           <plugin>
               <!-- always before maven-compiler-plugin -->
               <groupId>org.jetbrains.kotlin</groupId>
               <artifactId>kotlin-maven-plugin</artifactId>
               <version>${kotlin.version}</version>
               <executions>
                   <execution>
                       <id>compile</id>
                       <goals>
                           <goal>compile</goal>
                       </goals>
                       <configuration>
                           <sourceDirs>
                               <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                               <sourceDir>${project.basedir}/src/main/java</sourceDir>
                           </sourceDirs>
                       </configuration>
                   </execution>
                   <execution>
                       <id>test-compile</id>
                       <goals>
                           <goal>test-compile</goal>
                       </goals>
                       <configuration>
                           <sourceDirs>
                               <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                               <sourceDir>${project.basedir}/src/test/java</sourceDir>
                           </sourceDirs>
                       </configuration>
                   </execution>
               </executions>
               <configuration>
                   <!-- make kotlin generate 1.8 jvm compatible -->
                   <jvmTarget>${maven.compiler.target}</jvmTarget>
                   <compilerPlugins>
                       <!-- opens JPA and Sping annotations as non final -->
                       <plugin>jpa</plugin>
                       <plugin>spring</plugin>
                       <plugin>all-open</plugin>
                       <plugin>no-arg</plugin>
                   </compilerPlugins>
                   <pluginOptions>
                       <option>all-open:annotation=javax.enterprise.context.ApplicationScoped</option>
                       <option>all-open:annotation=net.seij.samplestore.resources.ApiModel</option>
                       <option>no-arg:annotation=net.seij.samplestore.resources.ApiModel</option>
                   </pluginOptions>
                   <args>
                       <!-- activates null strict checks -->
                       <arg>-Xjsr305=strict</arg>
                   </args>
               </configuration>
               <dependencies>
                   <dependency>
                       <groupId>org.jetbrains.kotlin</groupId>
                       <artifactId>kotlin-maven-noarg</artifactId>
                       <version>${kotlin.version}</version>
                   </dependency>
                   <dependency>
                       <groupId>org.jetbrains.kotlin</groupId>
                       <artifactId>kotlin-maven-allopen</artifactId>
                       <version>${kotlin.version}</version>
                   </dependency>
               </dependencies>
           </plugin>
           <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>${version.maven-compiler-plugin}</version>
               <executions>
                   <!-- Replacing default-compile as it is treated specially by maven -->
                   <execution>
                       <id>default-compile</id>
                       <phase>none</phase>
                   </execution>
                   <!-- Replacing default-testCompile as it is treated specially by maven -->
                   <execution>
                       <id>default-testCompile</id>
                       <phase>none</phase>
                   </execution>
                   <execution>
                       <id>java-compile</id>
                       <phase>compile</phase>
                       <goals>
                           <goal>compile</goal>
                       </goals>
                   </execution>
                   <execution>
                       <id>java-test-compile</id>
                       <phase>test-compile</phase>
                       <goals>
                           <goal>testCompile</goal>
                       </goals>
                   </execution>
               </executions>
           </plugin>
           <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>build-helper-maven-plugin</artifactId>
               <version>${build-helper-maven-plugin.version}</version>
               <executions>
                   <execution>
                       <id>add-source</id>
                       <phase>generate-sources</phase>
                       <goals>
                           <goal>add-source</goal>
                       </goals>
                       <configuration>
                           <sources>
                               <source>generated-sources</source>
                           </sources>
                       </configuration>
                   </execution>
               </executions>
           </plugin>
       </plugins>

   </build>
</project>

